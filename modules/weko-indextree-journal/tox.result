GLOB sdist-make: /code/modules/weko-indextree-journal/setup.py
c1 inst-nodeps: /code/modules/weko-indextree-journal/.tox/.tmp/package/1/weko-indextree-journal-1.0.0.dev20190000.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.0,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,atomicwrites==1.4.1,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.4,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==6.7,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,distlib==0.3.6,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,filelock==3.4.1,Flask==1.1.0,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.10.1,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.13.1,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,-e git+https://github.com/RCOSDP/flask-oauthlib.git@98eb36e1dfc66256fa7ea62237e9879acb906e9d#egg=Flask_OAuthlib,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.4.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.8,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,intervals==0.8.0,invenio-access==1.1.0,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_deposit&subdirectory=modules/invenio-deposit,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_s3&subdirectory=modules/invenio-s3,-e git+https://github.com/RCOSDP/invenio-search.git@cff9744c5dc651893a9c51672c5b8da9adc21e16#egg=invenio_search,-e git+https://github.com/RCOSDP/invenio-search-ui.git@74bd3b2990ff27b39e01b6b31be9a0b5fda3dd0f#egg=invenio_search_ui,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10.1,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==5.0.2,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pbr==5.11.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,platformdirs==2.4.0,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.0,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==4.2.0,pytest-cov==2.9.0,pytest-mock==3.2.0,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,selenium==3.141.0,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.16.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,stevedore==3.5.2,sword3common==0.1.1,testpath==0.3.1,toml==0.10.2,tornado==4.5.3,tox==3.28.0,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,uWSGI==2.0.21,uwsgitop==0.11,validators==0.12.0,vine==1.3.0,virtualenv==20.17.1,virtualenv-clone==0.5.7,virtualenvwrapper==4.8.4,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_index_tree&subdirectory=modules/weko-index-tree,weko-indextree-journal @ file:///code/modules/weko-indextree-journal/.tox/.tmp/package/1/weko-indextree-journal-1.0.0.dev20190000.zip,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_records&subdirectory=modules/weko-records,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_swordserver&subdirectory=modules/weko-swordserver,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://github.com/RCOSDP/weko.git@84633f34226891a4a701dee9c8eec64294b0446c#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='955492142'
c1 run-test: commands[0] | pytest --cov=weko_indextree_journal tests -v --cov-branch --cov-report=term --cov-report=xml --basetemp=/code/modules/weko-indextree-journal/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-4.2.0, py-1.11.0, pluggy-0.13.1 -- /code/modules/weko-indextree-journal/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/weko-indextree-journal, inifile:
plugins: celery-4.4.4, mock-3.2.0, cov-2.9.0
collecting ... collected 78 items

tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[0-True] ERROR [  1%]
tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[1-False] ERROR [  2%]
tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[2-True] ERROR [  3%]
tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[3-True] ERROR [  5%]
tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[4-False] ERROR [  6%]
tests/test_admin.py::TestIndexJournalSettingView::test_index ERROR       [  7%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_journal_by_index_id_acl[0-True] ERROR [  8%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_journal_by_index_id_acl[1-False] ERROR [ 10%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_journal_by_index_id_acl[2-True] ERROR [ 11%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_journal_by_index_id_acl[3-True] ERROR [ 12%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_journal_by_index_id_acl[4-False] ERROR [ 14%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_journal_by_index_id ERROR [ 15%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_json_schema_acl[0-True] ERROR [ 16%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_json_schema_acl[1-False] ERROR [ 17%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_json_schema_acl[2-True] ERROR [ 19%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_json_schema_acl[3-True] ERROR [ 20%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_json_schema_acl[4-False] ERROR [ 21%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_json_schema ERROR [ 23%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_schema_form_acl[0-True] ERROR [ 24%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_schema_form_acl[1-False] ERROR [ 25%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_schema_form_acl[2-True] ERROR [ 26%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_schema_form_acl[3-True] ERROR [ 28%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_schema_form_acl[4-False] ERROR [ 29%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_schema_form ERROR [ 30%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_journal_by_index_id_IndexJournalSettingView ERROR [ 32%]
tests/test_admin.py::TestIndexJournalSettingView::test_get_schema_form_IndexJournalSettingView ERROR [ 33%]
tests/test_api.py::TestJournals::test_create ERROR                       [ 34%]
tests/test_api.py::TestJournals::test_update ERROR                       [ 35%]
tests/test_api.py::TestJournals::test_delete ERROR                       [ 37%]
tests/test_api.py::TestJournals::test_get_journal ERROR                  [ 38%]
tests/test_api.py::TestJournals::test_get_journal_by_index_id ERROR      [ 39%]
tests/test_api.py::TestJournals::test_get_all_journals ERROR             [ 41%]
tests/test_models.py::TestJournal::test_str ERROR                        [ 42%]
tests/test_models.py::TestJournal_export_processing::test_save_export_info ERROR [ 43%]
tests/test_rest.py::test_need_record_permission ERROR                    [ 44%]
tests/test_rest.py::test_create_blueprint FAILED                         [ 46%]
tests/test_rest.py::TestJournalActionResource::test_get ERROR            [ 47%]
tests/test_rest.py::TestJournalActionResource::test_post_acl[0-True] ERROR [ 48%]
tests/test_rest.py::TestJournalActionResource::test_post_acl[1-False] ERROR [ 50%]
tests/test_rest.py::TestJournalActionResource::test_post_acl[2-True] ERROR [ 51%]
tests/test_rest.py::TestJournalActionResource::test_post_acl[3-True] ERROR [ 52%]
tests/test_rest.py::TestJournalActionResource::test_post_acl[4-False] ERROR [ 53%]
tests/test_rest.py::TestJournalActionResource::test_post_acl_guest ERROR [ 55%]
tests/test_rest.py::TestJournalActionResource::test_post ERROR           [ 56%]
tests/test_rest.py::TestJournalActionResource::test_put_acl[0-True] ERROR [ 57%]
tests/test_rest.py::TestJournalActionResource::test_put_acl[1-False] ERROR [ 58%]
tests/test_rest.py::TestJournalActionResource::test_put_acl[2-True] ERROR [ 60%]
tests/test_rest.py::TestJournalActionResource::test_put_acl[3-True] ERROR [ 61%]
tests/test_rest.py::TestJournalActionResource::test_put_acl[4-False] ERROR [ 62%]
tests/test_rest.py::TestJournalActionResource::test_put_acl_guest ERROR  [ 64%]
tests/test_rest.py::TestJournalActionResource::test_put ERROR            [ 65%]
tests/test_rest.py::TestJournalActionResource::test_delete_acl[0-True] ERROR [ 66%]
tests/test_rest.py::TestJournalActionResource::test_delete_acl[1-False] ERROR [ 67%]
tests/test_rest.py::TestJournalActionResource::test_delete_acl[2-True] ERROR [ 69%]
tests/test_rest.py::TestJournalActionResource::test_delete_acl[3-True] ERROR [ 70%]
tests/test_rest.py::TestJournalActionResource::test_delete_acl[4-False] ERROR [ 71%]
tests/test_rest.py::TestJournalActionResource::test_delete_acl_guest ERROR [ 73%]
tests/test_rest.py::TestJournalActionResource::test_delete ERROR         [ 74%]
tests/test_tasks.py::test_export_journal_task ERROR                      [ 75%]
tests/test_tasks.py::test_convert_none_to_blank PASSED                   [ 76%]
tests/test_views.py::test_export_journals_guest ERROR                    [ 78%]
tests/test_views.py::test_export_journals_acl[0-True] ERROR              [ 79%]
tests/test_views.py::test_export_journals_acl[1-True] ERROR              [ 80%]
tests/test_views.py::test_export_journals_acl[2-True] ERROR              [ 82%]
tests/test_views.py::test_export_journals_acl[3-True] ERROR              [ 83%]
tests/test_views.py::test_export_journals_acl[4-True] ERROR              [ 84%]
tests/test_views.py::test_export_journals ERROR                          [ 85%]
tests/test_views.py::test_obj_dict ERROR                                 [ 87%]
tests/test_views.py::test_check_view_guest ERROR                         [ 88%]
tests/test_views.py::test_check_view[0-200] ERROR                        [ 89%]
tests/test_views.py::test_check_view[1-200] ERROR                        [ 91%]
tests/test_views.py::test_check_view[2-200] ERROR                        [ 92%]
tests/test_views.py::test_check_view[3-200] ERROR                        [ 93%]
tests/test_views.py::test_check_view[4-200] ERROR                        [ 94%]
tests/test_views.py::test_dbsession_clean ERROR                          [ 96%]
tests/test_weko_indextree_journal.py::test_version PASSED                [ 97%]
tests/test_weko_indextree_journal.py::test_init PASSED                   [ 98%]
tests/test_weko_indextree_journal.py::test_init_withoutapp PASSED        [100%]

==================================== ERRORS ====================================
_____ ERROR at setup of TestIndexJournalSettingView.test_index_acl[0-True] _____

request = <SubRequest 'base_app' for <Function test_index_acl[0-True]>>
instance_path = '/var/tmp/tmpbd9yvxp9'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-search-ui/weko_search_ui/__init__.py:23: in <module>
    from .ext import WekoSearchREST, WekoSearchUI
../weko-search-ui/weko_search_ui/ext.py:24: in <module>
    from .rest import create_blueprint
../weko-search-ui/weko_search_ui/rest.py:72: in <module>
    from .utils import create_limmiter
../weko-search-ui/weko_search_ui/utils.py:74: in <module>
    from weko_deposit.api import WekoDeposit, WekoIndexer, WekoRecord
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____ ERROR at setup of TestIndexJournalSettingView.test_index_acl[1-False] _____

request = <SubRequest 'base_app' for <Function test_index_acl[1-False]>>
instance_path = '/var/tmp/tmpa673js69'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of TestIndexJournalSettingView.test_index_acl[2-True] _____

request = <SubRequest 'base_app' for <Function test_index_acl[2-True]>>
instance_path = '/var/tmp/tmpf3z8uvfm'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of TestIndexJournalSettingView.test_index_acl[3-True] _____

request = <SubRequest 'base_app' for <Function test_index_acl[3-True]>>
instance_path = '/var/tmp/tmpboa1qyvo'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____ ERROR at setup of TestIndexJournalSettingView.test_index_acl[4-False] _____

request = <SubRequest 'base_app' for <Function test_index_acl[4-False]>>
instance_path = '/var/tmp/tmpr103z2_t'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of TestIndexJournalSettingView.test_index ___________

request = <SubRequest 'base_app' for <Function test_index>>
instance_path = '/var/tmp/tmpfu2kk1uf'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_journal_by_index_id_acl[0-True] _

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id_acl[0-True]>>
instance_path = '/var/tmp/tmpuika0i25'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_journal_by_index_id_acl[1-False] _

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id_acl[1-False]>>
instance_path = '/var/tmp/tmpkxp0y94m'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_journal_by_index_id_acl[2-True] _

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id_acl[2-True]>>
instance_path = '/var/tmp/tmpgpoqr7zu'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_journal_by_index_id_acl[3-True] _

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id_acl[3-True]>>
instance_path = '/var/tmp/tmpa76us91g'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_journal_by_index_id_acl[4-False] _

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id_acl[4-False]>>
instance_path = '/var/tmp/tmpgl3tt3ae'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__ ERROR at setup of TestIndexJournalSettingView.test_get_journal_by_index_id __

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id>>
instance_path = '/var/tmp/tmpwp6c8edk'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_json_schema_acl[0-True] _

request = <SubRequest 'base_app' for <Function test_get_json_schema_acl[0-True]>>
instance_path = '/var/tmp/tmplg609_y7'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_json_schema_acl[1-False] _

request = <SubRequest 'base_app' for <Function test_get_json_schema_acl[1-False]>>
instance_path = '/var/tmp/tmpi2sdqiz2'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_json_schema_acl[2-True] _

request = <SubRequest 'base_app' for <Function test_get_json_schema_acl[2-True]>>
instance_path = '/var/tmp/tmpgaoksp6c'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_json_schema_acl[3-True] _

request = <SubRequest 'base_app' for <Function test_get_json_schema_acl[3-True]>>
instance_path = '/var/tmp/tmphdyz5zky'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_json_schema_acl[4-False] _

request = <SubRequest 'base_app' for <Function test_get_json_schema_acl[4-False]>>
instance_path = '/var/tmp/tmpp23bwwf_'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestIndexJournalSettingView.test_get_json_schema ______

request = <SubRequest 'base_app' for <Function test_get_json_schema>>
instance_path = '/var/tmp/tmpw80jftlq'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_schema_form_acl[0-True] _

request = <SubRequest 'base_app' for <Function test_get_schema_form_acl[0-True]>>
instance_path = '/var/tmp/tmp3xgjsco_'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_schema_form_acl[1-False] _

request = <SubRequest 'base_app' for <Function test_get_schema_form_acl[1-False]>>
instance_path = '/var/tmp/tmpbbz8us_0'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_schema_form_acl[2-True] _

request = <SubRequest 'base_app' for <Function test_get_schema_form_acl[2-True]>>
instance_path = '/var/tmp/tmpn6aux80z'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_schema_form_acl[3-True] _

request = <SubRequest 'base_app' for <Function test_get_schema_form_acl[3-True]>>
instance_path = '/var/tmp/tmpoe05p3sr'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_schema_form_acl[4-False] _

request = <SubRequest 'base_app' for <Function test_get_schema_form_acl[4-False]>>
instance_path = '/var/tmp/tmppap5ccl6'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestIndexJournalSettingView.test_get_schema_form ______

request = <SubRequest 'base_app' for <Function test_get_schema_form>>
instance_path = '/var/tmp/tmpb3f6b07g'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_journal_by_index_id_IndexJournalSettingView _

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id_IndexJournalSettingView>>
instance_path = '/var/tmp/tmp9yankece'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_ ERROR at setup of TestIndexJournalSettingView.test_get_schema_form_IndexJournalSettingView _

request = <SubRequest 'base_app' for <Function test_get_schema_form_IndexJournalSettingView>>
instance_path = '/var/tmp/tmpqst4y52z'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of TestJournals.test_create __________________

request = <SubRequest 'base_app' for <Function test_create>>
instance_path = '/var/tmp/tmpcyp_mxpb'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of TestJournals.test_update __________________

request = <SubRequest 'base_app' for <Function test_update>>
instance_path = '/var/tmp/tmp67xexghk'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of TestJournals.test_delete __________________

request = <SubRequest 'base_app' for <Function test_delete>>
instance_path = '/var/tmp/tmp8b_cn27w'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________ ERROR at setup of TestJournals.test_get_journal ________________

request = <SubRequest 'base_app' for <Function test_get_journal>>
instance_path = '/var/tmp/tmpnwb9t5sm'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________ ERROR at setup of TestJournals.test_get_journal_by_index_id __________

request = <SubRequest 'base_app' for <Function test_get_journal_by_index_id>>
instance_path = '/var/tmp/tmpvnc5q1ok'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of TestJournals.test_get_all_journals _____________

request = <SubRequest 'base_app' for <Function test_get_all_journals>>
instance_path = '/var/tmp/tmp2yrft2km'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of TestJournal.test_str ____________________

request = <SubRequest 'base_app' for <Function test_str>>
instance_path = '/var/tmp/tmpks36z25x'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____ ERROR at setup of TestJournal_export_processing.test_save_export_info _____

request = <SubRequest 'base_app' for <Function test_save_export_info>>
instance_path = '/var/tmp/tmpy4yzst3i'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________________ ERROR at setup of test_need_record_permission _________________

request = <SubRequest 'base_app' for <Function test_need_record_permission>>
instance_path = '/var/tmp/tmplakoyt8r'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of TestJournalActionResource.test_get _____________

request = <SubRequest 'base_app' for <Function test_get>>
instance_path = '/var/tmp/tmppguyv5fn'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_post_acl[0-True] _______

request = <SubRequest 'base_app' for <Function test_post_acl[0-True]>>
instance_path = '/var/tmp/tmpcfvspfhr'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_post_acl[1-False] ______

request = <SubRequest 'base_app' for <Function test_post_acl[1-False]>>
instance_path = '/var/tmp/tmpi89q86j4'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_post_acl[2-True] _______

request = <SubRequest 'base_app' for <Function test_post_acl[2-True]>>
instance_path = '/var/tmp/tmpzii3tr2i'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_post_acl[3-True] _______

request = <SubRequest 'base_app' for <Function test_post_acl[3-True]>>
instance_path = '/var/tmp/tmp9o4lpjd6'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_post_acl[4-False] ______

request = <SubRequest 'base_app' for <Function test_post_acl[4-False]>>
instance_path = '/var/tmp/tmp350los73'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of TestJournalActionResource.test_post_acl_guest ________

request = <SubRequest 'base_app' for <Function test_post_acl_guest>>
instance_path = '/var/tmp/tmptosln6k_'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________ ERROR at setup of TestJournalActionResource.test_post _____________

request = <SubRequest 'base_app' for <Function test_post>>
instance_path = '/var/tmp/tmpy4zdaweb'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of TestJournalActionResource.test_put_acl[0-True] _______

request = <SubRequest 'base_app' for <Function test_put_acl[0-True]>>
instance_path = '/var/tmp/tmpbdh6y3bp'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_put_acl[1-False] _______

request = <SubRequest 'base_app' for <Function test_put_acl[1-False]>>
instance_path = '/var/tmp/tmptijpnw70'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of TestJournalActionResource.test_put_acl[2-True] _______

request = <SubRequest 'base_app' for <Function test_put_acl[2-True]>>
instance_path = '/var/tmp/tmpml20ka0r'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______ ERROR at setup of TestJournalActionResource.test_put_acl[3-True] _______

request = <SubRequest 'base_app' for <Function test_put_acl[3-True]>>
instance_path = '/var/tmp/tmp8nfhifyi'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_put_acl[4-False] _______

request = <SubRequest 'base_app' for <Function test_put_acl[4-False]>>
instance_path = '/var/tmp/tmp666vn7y1'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
________ ERROR at setup of TestJournalActionResource.test_put_acl_guest ________

request = <SubRequest 'base_app' for <Function test_put_acl_guest>>
instance_path = '/var/tmp/tmpr940p9oj'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____________ ERROR at setup of TestJournalActionResource.test_put _____________

request = <SubRequest 'base_app' for <Function test_put>>
instance_path = '/var/tmp/tmpxih8z7l8'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of TestJournalActionResource.test_delete_acl[0-True] ______

request = <SubRequest 'base_app' for <Function test_delete_acl[0-True]>>
instance_path = '/var/tmp/tmp2g_h8prh'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of TestJournalActionResource.test_delete_acl[1-False] _____

request = <SubRequest 'base_app' for <Function test_delete_acl[1-False]>>
instance_path = '/var/tmp/tmpcdnakmn6'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of TestJournalActionResource.test_delete_acl[2-True] ______

request = <SubRequest 'base_app' for <Function test_delete_acl[2-True]>>
instance_path = '/var/tmp/tmpdn_4jqjx'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of TestJournalActionResource.test_delete_acl[3-True] ______

request = <SubRequest 'base_app' for <Function test_delete_acl[3-True]>>
instance_path = '/var/tmp/tmp0xxi5xb1'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_____ ERROR at setup of TestJournalActionResource.test_delete_acl[4-False] _____

request = <SubRequest 'base_app' for <Function test_delete_acl[4-False]>>
instance_path = '/var/tmp/tmppuswv2wb'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______ ERROR at setup of TestJournalActionResource.test_delete_acl_guest _______

request = <SubRequest 'base_app' for <Function test_delete_acl_guest>>
instance_path = '/var/tmp/tmpsazkoo10'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________ ERROR at setup of TestJournalActionResource.test_delete ____________

request = <SubRequest 'base_app' for <Function test_delete>>
instance_path = '/var/tmp/tmpziad1h12'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
__________________ ERROR at setup of test_export_journal_task __________________

request = <SubRequest 'base_app' for <Function test_export_journal_task>>
instance_path = '/var/tmp/tmpnu5e6pax'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_________________ ERROR at setup of test_export_journals_guest _________________

request = <SubRequest 'base_app' for <Function test_export_journals_guest>>
instance_path = '/var/tmp/tmp11dkjfyx'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_export_journals_acl[0-True] ______________

request = <SubRequest 'base_app' for <Function test_export_journals_acl[0-True]>>
instance_path = '/var/tmp/tmpmcs7gsqs'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_export_journals_acl[1-True] ______________

request = <SubRequest 'base_app' for <Function test_export_journals_acl[1-True]>>
instance_path = '/var/tmp/tmp_c4csrmn'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_export_journals_acl[2-True] ______________

request = <SubRequest 'base_app' for <Function test_export_journals_acl[2-True]>>
instance_path = '/var/tmp/tmpyttt2v0p'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_export_journals_acl[3-True] ______________

request = <SubRequest 'base_app' for <Function test_export_journals_acl[3-True]>>
instance_path = '/var/tmp/tmp0l6ltgoc'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
______________ ERROR at setup of test_export_journals_acl[4-True] ______________

request = <SubRequest 'base_app' for <Function test_export_journals_acl[4-True]>>
instance_path = '/var/tmp/tmpnrq7o_ww'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_export_journals ____________________

request = <SubRequest 'base_app' for <Function test_export_journals>>
instance_path = '/var/tmp/tmpzqnpbxk4'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
_______________________ ERROR at setup of test_obj_dict ________________________

request = <SubRequest 'base_app' for <Function test_obj_dict>>
instance_path = '/var/tmp/tmpmaitvh22'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_check_view_guest ____________________

request = <SubRequest 'base_app' for <Function test_check_view_guest>>
instance_path = '/var/tmp/tmp00y6xsyd'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_check_view[0-200] ___________________

request = <SubRequest 'base_app' for <Function test_check_view[0-200]>>
instance_path = '/var/tmp/tmpm1kr3d0h'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_check_view[1-200] ___________________

request = <SubRequest 'base_app' for <Function test_check_view[1-200]>>
instance_path = '/var/tmp/tmpy639nsqf'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_check_view[2-200] ___________________

request = <SubRequest 'base_app' for <Function test_check_view[2-200]>>
instance_path = '/var/tmp/tmpz4hl0mcf'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_check_view[3-200] ___________________

request = <SubRequest 'base_app' for <Function test_check_view[3-200]>>
instance_path = '/var/tmp/tmpmgoeps1b'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
___________________ ERROR at setup of test_check_view[4-200] ___________________

request = <SubRequest 'base_app' for <Function test_check_view[4-200]>>
instance_path = '/var/tmp/tmpx15dj3z1'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
____________________ ERROR at setup of test_dbsession_clean ____________________

request = <SubRequest 'base_app' for <Function test_dbsession_clean>>
instance_path = '/var/tmp/tmpke5h8zni'

    @pytest.fixture()
    def base_app(request,instance_path):
        app_ = Flask(
            "testapp",
            instance_path=instance_path,
            static_folder=join(instance_path, "static"),
        )
        app_.config.update(
            CELERY_ALWAYS_EAGER=True,
            CELERY_CACHE_BACKEND="memory",
            CELERY_EAGER_PROPAGATES_EXCEPTIONS=True,
            CELERY_RESULT_BACKEND="cache",
            CACHE_REDIS_URL="redis://redis:6379/0",
            CACHE_REDIS_DB=0,
            CACHE_REDIS_HOST="redis",
            REDIS_PORT="6379",
            JSONSCHEMAS_URL_SCHEME="http",
            SECRET_KEY="CHANGE_ME",
            SECURITY_PASSWORD_SALT="CHANGE_ME_ALSO",
            # SQLALCHEMY_DATABASE_URI=os.environ.get(
            #     "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            # ),
            SQLALCHEMY_DATABASE_URI=os.getenv('SQLALCHEMY_DATABASE_URI',
                                               'postgresql+psycopg2://invenio:dbpass123@postgresql:5432/wekotest'),
            SQLALCHEMY_TRACK_MODIFICATIONS=True,
            SQLALCHEMY_ECHO=False,
            TESTING=True,
            WTF_CSRF_ENABLED=False,
            DEPOSIT_SEARCH_API="/api/search",
            SECURITY_PASSWORD_HASH="plaintext",
            SECURITY_PASSWORD_SCHEMES=["plaintext"],
            SECURITY_DEPRECATED_PASSWORD_SCHEMES=[],
            OAUTHLIB_INSECURE_TRANSPORT=True,
            OAUTH2_CACHE_TYPE="simple",
            ACCOUNTS_JWT_ENABLE=False,
            INDEXER_DEFAULT_INDEX="{}-weko-item-v1.0.0".format("test"),
            INDEXER_DEFAULT_DOCTYPE="item-v1.0.0",
            INDEXER_DEFAULT_DOC_TYPE="item-v1.0.0",
            INDEXER_FILE_DOC_TYPE="content",
            WEKO_INDEX_TREE_STYLE_OPTIONS={
                "id": "weko",
                "widths": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"],
            },
            WEKO_INDEX_TREE_UPATED=True,
            I18N_LANGUAGES=[("ja", "Japanese"), ("en", "English")],
            SERVER_NAME="TEST_SERVER",
            SEARCH_ELASTIC_HOSTS="elasticsearch",
            SEARCH_INDEX_PREFIX="test-",
            WEKO_PERMISSION_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
                "Contributor",
                "General",
                "Community Administrator",
            ],
            WEKO_PERMISSION_SUPER_ROLE_USER=[
                "System Administrator",
                "Repository Administrator",
            ],
            WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS = dict(
                tid=dict(
                    record_class='weko_indextree_journal.api:Journals',
                    admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                    journal_route='/admin/indexjournal',
                    # item_tree_journal_route='/tree/journal/<int:pid_value>',
                    # journal_move_route='/tree/journal/move/<int:index_id>',
                    default_media_type='application/json',
                    create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                    delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                )
            ),
        )
        if hasattr(request, "param"):
            if "endpoint" in request.param:
                app_.config["WEKO_INDEXTREE_JOURNAL_REST_ENDPOINTS"]["tid"].update(
                    request.param["endpoint"]
                )
        Babel(app_)
        InvenioAccounts(app_)
>       InvenioAccess(app_)

tests/conftest.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:143: in __init__
    self._state = self.init_app(app, **kwargs)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:161: in init_app
    cache=kwargs.get('cache'))
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:41: in __init__
    self.load_entry_point_actions(entry_point_actions)
.tox/c1/lib/python3.6/site-packages/invenio_access/ext.py:112: in load_entry_point_actions
    self.register_action(ep.load())
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-records-ui/weko_records_ui/permissions.py:37: in <module>
    from weko_workflow.api import WorkActivity
../weko-workflow/weko_workflow/api.py:38: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
=================================== FAILURES ===================================
____________________________ test_create_blueprint _____________________________

instance_path = '/var/tmp/tmp0yh1ntth'

    def test_create_blueprint(instance_path):
        app = Flask("testapp",
            instance_path=instance_path)
        app.config.update(
            SQLALCHEMY_DATABASE_URI=os.environ.get(
                "SQLALCHEMY_DATABASE_URI", "sqlite:///test.db"
            ),
            TESTING=True,
            SERVER_NAME="TEST_SERVER",
        )
        endpoints = dict(
            tid=dict(
                record_serializers={'application/json': 'test_rest.json_record'},
                record_class='weko_indextree_journal.api:Journals',
                admin_indexjournal_route='/admin/indexjournal/<int:journal_id>',
                journal_route='/admin/indexjournal',
                default_media_type='application/json',
                create_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                read_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                update_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
                delete_permission_factory_imp='weko_indextree_journal.permissions:indextree_journal_permission',
            )
        )
        from invenio_db import db
        from invenio_db import InvenioDB
        from sqlalchemy_utils.functions import create_database, database_exists
>       InvenioDB(app)

tests/test_rest.py:88: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../invenio-db/invenio_db/ext.py:33: in __init__
    self.init_app(app, **kwargs)
../invenio-db/invenio_db/ext.py:38: in init_app
    self.init_db(app, **kwargs)
../invenio-db/invenio_db/ext.py:77: in init_db
    base_entry.load()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2450: in load
    return self.resolve()
.tox/c1/lib/python3.6/site-packages/pkg_resources/__init__.py:2456: in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
../weko-gridlayout/weko_gridlayout/__init__.py:12: in <module>
    from .ext import WekoGridLayout
../weko-gridlayout/weko_gridlayout/ext.py:16: in <module>
    from .views import handle_not_found
../weko-gridlayout/weko_gridlayout/views.py:28: in <module>
    from .services import WidgetDataLoaderServices, WidgetDesignPageServices, \
../weko-gridlayout/weko_gridlayout/services.py:44: in <module>
    from .utils import build_data, build_multi_lang_data, build_rss_xml, \
../weko-gridlayout/weko_gridlayout/utils.py:49: in <module>
    from weko_records.serializers.utils import get_mapping
../weko-records/weko_records/serializers/__init__.py:30: in <module>
    from .json import WekoJSONSerializer
../weko-records/weko_records/serializers/json.py:33: in <module>
    from weko_records.serializers.pidrelations import serialize_related_identifiers
../weko-records/weko_records/serializers/pidrelations.py:31: in <module>
    from weko_deposit.api import WekoDeposit
../weko-deposit/weko_deposit/__init__.py:23: in <module>
    from .ext import WekoDeposit, WekoDepositREST
../weko-deposit/weko_deposit/ext.py:26: in <module>
    from .receivers import append_file_content
../weko-deposit/weko_deposit/receivers.py:17: in <module>
    from .api import WekoDeposit
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    """Weko Deposit API."""
    import copy
    import inspect
    import sys
    import uuid
    from collections import OrderedDict
    from datetime import datetime, timezone,date
    from typing import NoReturn, Union
>   from tika import parser
E   ModuleNotFoundError: No module named 'tika'

../weko-deposit/weko_deposit/api.py:29: ModuleNotFoundError
=============================== warnings summary ===============================
tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[0-True]
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/jsonpath_ng/ext/string.py:18: DeprecationWarning: invalid escape sequence \(
    SUB = re.compile("sub\(/(.*)/,\s+(.*)\)")

tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[0-True]
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/jsonpath_ng/ext/string.py:19: DeprecationWarning: invalid escape sequence \(
    SPLIT = re.compile("split\((.),\s+(\d+),\s+(\d+|-1)\)")

tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[0-True]
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/jsonpath_ng/ext/string.py:20: DeprecationWarning: invalid escape sequence \(
    STR = re.compile("str\(\)")

tests/test_admin.py::TestIndexJournalSettingView::test_index_acl[0-True]
  /code/modules/weko-indextree-journal/.tox/c1/bin/bagit.py:926: DeprecationWarning: invalid escape sequence \c
    """

tests/test_rest.py::test_create_blueprint
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
    'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '

tests/test_rest.py::test_create_blueprint
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/citeproc/formatter/rst.py:8: DeprecationWarning: invalid escape sequence \*
    text = text.replace('*', '\*')

tests/test_rest.py::test_create_blueprint
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/citeproc/formatter/rst.py:9: DeprecationWarning: invalid escape sequence \`
    text = text.replace('`', '\`')

tests/test_rest.py::test_create_blueprint
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/citeproc/model.py:671: DeprecationWarning: invalid escape sequence \d
    m = re.search('\d+', first)

tests/test_rest.py::test_create_blueprint
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/citeproc/source/bibtex/bibtex.py:156: DeprecationWarning: invalid escape sequence \d
    RE_DAY = '(?P<day>\d+)'

tests/test_rest.py::test_create_blueprint
  /code/modules/weko-indextree-journal/.tox/c1/lib/python3.6/site-packages/citeproc/source/bibtex/bibtex.py:157: DeprecationWarning: invalid escape sequence \w
    RE_MONTH = '(?P<month>\w+)'

-- Docs: https://docs.pytest.org/en/latest/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                                    Stmts   Miss Branch BrPart  Cover
-------------------------------------------------------------------------
weko_indextree_journal/__init__.py          4      0      0      0   100%
weko_indextree_journal/admin.py            93     69     48      0    18%
weko_indextree_journal/api.py             147    132     32      0     9%
weko_indextree_journal/bundles.py           6      0      0      0   100%
weko_indextree_journal/config.py           15      0      0      0   100%
weko_indextree_journal/errors.py           23      0     14      0   100%
weko_indextree_journal/ext.py              34      0     18      0   100%
weko_indextree_journal/models.py           80     18     14      1    71%
weko_indextree_journal/permissions.py       4      0      0      0   100%
weko_indextree_journal/rest.py             86     53     36      2    32%
weko_indextree_journal/tasks.py            95     81     16      0    14%
weko_indextree_journal/version.py           3      0      0      0   100%
weko_indextree_journal/views.py            46     22      4      0    48%
-------------------------------------------------------------------------
TOTAL                                     636    375    182      3    38%
Coverage XML written to file coverage.xml

========== 1 failed, 4 passed, 10 warnings, 73 error in 45.03 seconds ==========
ERROR: InvocationError for command /code/modules/weko-indextree-journal/.tox/c1/bin/pytest --cov=weko_indextree_journal tests -v --cov-branch --cov-report=term --cov-report=xml --basetemp=/code/modules/weko-indextree-journal/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
