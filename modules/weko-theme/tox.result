GLOB sdist-make: /code/modules/weko-theme/setup.py
c1 inst-nodeps: /code/modules/weko-theme/.tox/.tmp/package/1/weko-theme-0.1.0.dev20170000.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.0,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,atomicwrites==1.4.1,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.4,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==6.7,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,distlib==0.3.6,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,filelock==3.4.1,Flask==1.1.0,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.10.1,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.13.1,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,-e git+https://github.com/RCOSDP/flask-oauthlib.git@98eb36e1dfc66256fa7ea62237e9879acb906e9d#egg=Flask_OAuthlib,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.4.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.8,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,intervals==0.8.0,invenio-access==1.1.0,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_deposit&subdirectory=modules/invenio-deposit,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_s3&subdirectory=modules/invenio-s3,-e git+https://github.com/RCOSDP/invenio-search.git@cff9744c5dc651893a9c51672c5b8da9adc21e16#egg=invenio_search,-e git+https://github.com/RCOSDP/invenio-search-ui.git@74bd3b2990ff27b39e01b6b31be9a0b5fda3dd0f#egg=invenio_search_ui,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10.1,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==5.0.2,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pbr==5.11.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,platformdirs==2.4.0,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.0,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==4.2.0,pytest-cov==2.9.0,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,selenium==3.141.0,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.16.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,stevedore==3.5.2,sword3common==0.1.1,testpath==0.3.1,tika==2.6.0,toml==0.10.2,tornado==4.5.3,tox==3.28.0,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,uWSGI==2.0.21,uwsgitop==0.11,validators==0.12.0,vine==1.3.0,virtualenv==20.17.1,virtualenv-clone==0.5.7,virtualenvwrapper==4.8.4,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_records&subdirectory=modules/weko-records,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_swordserver&subdirectory=modules/weko-swordserver,weko-theme @ file:///code/modules/weko-theme/.tox/.tmp/package/1/weko-theme-0.1.0.dev20170000.zip,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://github.com/RCOSDP/weko.git@ae2e1abe9b2666157a8d8a5ea83dba052235fb68#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='105724433'
c1 run-test: commands[0] | pytest --cov=weko_theme tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/weko-theme/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-4.2.0, py-1.11.0, pluggy-0.13.1 -- /code/modules/weko-theme/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/weko-theme, inifile:
plugins: celery-4.4.4, cov-2.9.0
collecting ... collected 12 items

tests/test_ext.py::test_WekoTheme PASSED                                 [  8%]
tests/test_utils.py::test_get_weko_contents PASSED                       [ 16%]
tests/test_utils.py::test_get_community_id ERROR                         [ 25%]
tests/test_utils.py::test_get_design_layout ERROR                        [ 33%]
tests/test_utils.py::test_has_widget_design ERROR                        [ 41%]
tests/test_utils.py::test_get_init_display_setting ERROR                 [ 50%]
tests/test_views.py::test_index PASSED                                   [ 58%]
tests/test_views.py::test_edit PASSED                                    [ 66%]
tests/test_views.py::test_get_default_search_setting PASSED              [ 75%]
tests/test_views.py::test_get_init_display_setting PASSED                [ 83%]
tests/test_weko_theme.py::test_version PASSED                            [ 91%]
tests/test_weko_theme.py::test_init PASSED                               [100%]

==================================== ERRORS ====================================
___________________ ERROR at setup of test_get_community_id ____________________

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def client_request_args(app):
>       app.register_blueprint(create_blueprint(app, app.config['WEKO_INDEX_TREE_REST_ENDPOINTS']))

tests/conftest.py:553: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

app = <Flask 'testapp'>
endpoints = {'tid': {'create_permission_factory_imp': 'weko_index_tree.permissions:index_tree_permission', 'default_media_type': '...imp': 'weko_index_tree.permissions:index_tree_permission', 'get_index_root_tree': '/<string:version>/tree/index', ...}}

    def create_blueprint(app, endpoints):
        """Create Weko-Index-Tree-REST blueprint.
    
        See: :data:`weko_index_tree.config.WEKO_INDEX_TREE_REST_ENDPOINTS`.
    
        :param endpoints: List of endpoints configuration.
        :returns: The configured blueprint.
        """
        blueprint = Blueprint(
            'weko_index_tree_rest',
            __name__,
            url_prefix='',
        )
    
        @blueprint.teardown_request
        def dbsession_clean(exception):
            current_app.logger.debug("weko_index_tree dbsession_clean: {}".format(exception))
            if exception is None:
                try:
                    db.session.commit()
                except:
                    db.session.rollback()
            db.session.remove()
    
        for endpoint, options in (endpoints or {}).items():
            if 'record_serializers' in options:
                record_serializers = options.get('record_serializers')
                record_serializers = {mime: obj_or_import_string(func)
                                      for mime, func in record_serializers.items()}
            else:
                record_serializers = {}
    
            record_class = obj_or_import_string(
                options.get('record_class'), default=Indexes)
    
            ctx = dict(
                read_permission_factory=obj_or_import_string(
                    options.get('read_permission_factory_imp')
                ),
                create_permission_factory=obj_or_import_string(
                    options.get('create_permission_factory_imp')
                ),
                update_permission_factory=obj_or_import_string(
                    options.get('update_permission_factory_imp')
                ),
                delete_permission_factory=obj_or_import_string(
                    options.get('delete_permission_factory_imp')
                ),
                record_class=record_class,
                loaders={
                    options.get('default_media_type'): lambda: request.get_json()},
            )
    
            iar = IndexActionResource.as_view(
                IndexActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            ita = IndexTreeActionResource.as_view(
                IndexTreeActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            blueprint.add_url_rule(
>               options.pop('index_route'),
                view_func=iar,
                methods=['GET', 'PUT', 'POST', 'DELETE'],
            )
E           KeyError: 'index_route'

../weko-index-tree/weko_index_tree/rest.py:140: KeyError
___________________ ERROR at setup of test_get_design_layout ___________________

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def client_request_args(app):
>       app.register_blueprint(create_blueprint(app, app.config['WEKO_INDEX_TREE_REST_ENDPOINTS']))

tests/conftest.py:553: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

app = <Flask 'testapp'>
endpoints = {'tid': {'create_permission_factory_imp': 'weko_index_tree.permissions:index_tree_permission', 'default_media_type': '...imp': 'weko_index_tree.permissions:index_tree_permission', 'get_index_root_tree': '/<string:version>/tree/index', ...}}

    def create_blueprint(app, endpoints):
        """Create Weko-Index-Tree-REST blueprint.
    
        See: :data:`weko_index_tree.config.WEKO_INDEX_TREE_REST_ENDPOINTS`.
    
        :param endpoints: List of endpoints configuration.
        :returns: The configured blueprint.
        """
        blueprint = Blueprint(
            'weko_index_tree_rest',
            __name__,
            url_prefix='',
        )
    
        @blueprint.teardown_request
        def dbsession_clean(exception):
            current_app.logger.debug("weko_index_tree dbsession_clean: {}".format(exception))
            if exception is None:
                try:
                    db.session.commit()
                except:
                    db.session.rollback()
            db.session.remove()
    
        for endpoint, options in (endpoints or {}).items():
            if 'record_serializers' in options:
                record_serializers = options.get('record_serializers')
                record_serializers = {mime: obj_or_import_string(func)
                                      for mime, func in record_serializers.items()}
            else:
                record_serializers = {}
    
            record_class = obj_or_import_string(
                options.get('record_class'), default=Indexes)
    
            ctx = dict(
                read_permission_factory=obj_or_import_string(
                    options.get('read_permission_factory_imp')
                ),
                create_permission_factory=obj_or_import_string(
                    options.get('create_permission_factory_imp')
                ),
                update_permission_factory=obj_or_import_string(
                    options.get('update_permission_factory_imp')
                ),
                delete_permission_factory=obj_or_import_string(
                    options.get('delete_permission_factory_imp')
                ),
                record_class=record_class,
                loaders={
                    options.get('default_media_type'): lambda: request.get_json()},
            )
    
            iar = IndexActionResource.as_view(
                IndexActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            ita = IndexTreeActionResource.as_view(
                IndexTreeActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            blueprint.add_url_rule(
>               options.pop('index_route'),
                view_func=iar,
                methods=['GET', 'PUT', 'POST', 'DELETE'],
            )
E           KeyError: 'index_route'

../weko-index-tree/weko_index_tree/rest.py:140: KeyError
___________________ ERROR at setup of test_has_widget_design ___________________

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def client_request_args(app):
>       app.register_blueprint(create_blueprint(app, app.config['WEKO_INDEX_TREE_REST_ENDPOINTS']))

tests/conftest.py:553: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

app = <Flask 'testapp'>
endpoints = {'tid': {'create_permission_factory_imp': 'weko_index_tree.permissions:index_tree_permission', 'default_media_type': '...imp': 'weko_index_tree.permissions:index_tree_permission', 'get_index_root_tree': '/<string:version>/tree/index', ...}}

    def create_blueprint(app, endpoints):
        """Create Weko-Index-Tree-REST blueprint.
    
        See: :data:`weko_index_tree.config.WEKO_INDEX_TREE_REST_ENDPOINTS`.
    
        :param endpoints: List of endpoints configuration.
        :returns: The configured blueprint.
        """
        blueprint = Blueprint(
            'weko_index_tree_rest',
            __name__,
            url_prefix='',
        )
    
        @blueprint.teardown_request
        def dbsession_clean(exception):
            current_app.logger.debug("weko_index_tree dbsession_clean: {}".format(exception))
            if exception is None:
                try:
                    db.session.commit()
                except:
                    db.session.rollback()
            db.session.remove()
    
        for endpoint, options in (endpoints or {}).items():
            if 'record_serializers' in options:
                record_serializers = options.get('record_serializers')
                record_serializers = {mime: obj_or_import_string(func)
                                      for mime, func in record_serializers.items()}
            else:
                record_serializers = {}
    
            record_class = obj_or_import_string(
                options.get('record_class'), default=Indexes)
    
            ctx = dict(
                read_permission_factory=obj_or_import_string(
                    options.get('read_permission_factory_imp')
                ),
                create_permission_factory=obj_or_import_string(
                    options.get('create_permission_factory_imp')
                ),
                update_permission_factory=obj_or_import_string(
                    options.get('update_permission_factory_imp')
                ),
                delete_permission_factory=obj_or_import_string(
                    options.get('delete_permission_factory_imp')
                ),
                record_class=record_class,
                loaders={
                    options.get('default_media_type'): lambda: request.get_json()},
            )
    
            iar = IndexActionResource.as_view(
                IndexActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            ita = IndexTreeActionResource.as_view(
                IndexTreeActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            blueprint.add_url_rule(
>               options.pop('index_route'),
                view_func=iar,
                methods=['GET', 'PUT', 'POST', 'DELETE'],
            )
E           KeyError: 'index_route'

../weko-index-tree/weko_index_tree/rest.py:140: KeyError
_______________ ERROR at setup of test_get_init_display_setting ________________

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def client_request_args(app):
>       app.register_blueprint(create_blueprint(app, app.config['WEKO_INDEX_TREE_REST_ENDPOINTS']))

tests/conftest.py:553: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

app = <Flask 'testapp'>
endpoints = {'tid': {'create_permission_factory_imp': 'weko_index_tree.permissions:index_tree_permission', 'default_media_type': '...imp': 'weko_index_tree.permissions:index_tree_permission', 'get_index_root_tree': '/<string:version>/tree/index', ...}}

    def create_blueprint(app, endpoints):
        """Create Weko-Index-Tree-REST blueprint.
    
        See: :data:`weko_index_tree.config.WEKO_INDEX_TREE_REST_ENDPOINTS`.
    
        :param endpoints: List of endpoints configuration.
        :returns: The configured blueprint.
        """
        blueprint = Blueprint(
            'weko_index_tree_rest',
            __name__,
            url_prefix='',
        )
    
        @blueprint.teardown_request
        def dbsession_clean(exception):
            current_app.logger.debug("weko_index_tree dbsession_clean: {}".format(exception))
            if exception is None:
                try:
                    db.session.commit()
                except:
                    db.session.rollback()
            db.session.remove()
    
        for endpoint, options in (endpoints or {}).items():
            if 'record_serializers' in options:
                record_serializers = options.get('record_serializers')
                record_serializers = {mime: obj_or_import_string(func)
                                      for mime, func in record_serializers.items()}
            else:
                record_serializers = {}
    
            record_class = obj_or_import_string(
                options.get('record_class'), default=Indexes)
    
            ctx = dict(
                read_permission_factory=obj_or_import_string(
                    options.get('read_permission_factory_imp')
                ),
                create_permission_factory=obj_or_import_string(
                    options.get('create_permission_factory_imp')
                ),
                update_permission_factory=obj_or_import_string(
                    options.get('update_permission_factory_imp')
                ),
                delete_permission_factory=obj_or_import_string(
                    options.get('delete_permission_factory_imp')
                ),
                record_class=record_class,
                loaders={
                    options.get('default_media_type'): lambda: request.get_json()},
            )
    
            iar = IndexActionResource.as_view(
                IndexActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            ita = IndexTreeActionResource.as_view(
                IndexTreeActionResource.view_name.format(endpoint),
                ctx=ctx,
                record_serializers=record_serializers,
                default_media_type=options.get('default_media_type'),
            )
    
            blueprint.add_url_rule(
>               options.pop('index_route'),
                view_func=iar,
                methods=['GET', 'PUT', 'POST', 'DELETE'],
            )
E           KeyError: 'index_route'

../weko-index-tree/weko_index_tree/rest.py:140: KeyError
=============================== warnings summary ===============================
tests/test_ext.py::test_WekoTheme
  /code/modules/weko-theme/.tox/c1/lib/python3.6/site-packages/flask_caching/__init__.py:241: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
    category=DeprecationWarning,

tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
tests/test_ext.py::test_WekoTheme
  /code/modules/weko-theme/.tox/c1/lib/python3.6/site-packages/invenio_admin/ext.py:73: PendingDeprecationWarning: Usage of model and modelview kwargs are deprecated in favor of view_class, args and kwargs.
    PendingDeprecationWarning

tests/test_ext.py::test_WekoTheme
  /code/modules/weko-theme/.tox/c1/lib/python3.6/site-packages/flask_admin/model/base.py:1416: UserWarning: Fields missing from ruleset: created_userId,created_date,updated_userId,updated_date
    warnings.warn(text)

tests/test_utils.py::test_get_weko_contents
  /code/modules/weko-theme/.tox/c1/lib/python3.6/site-packages/flask/sessions.py:211: UserWarning: "TEST_SERVER" is not a valid cookie domain, it must contain a ".". Add an entry to your hosts file, for example "TEST_SERVER.localdomain", and use that instead.
    ' "{rv}.localdomain", and use that instead.'.format(rv=rv)

-- Docs: https://docs.pytest.org/en/latest/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                     Stmts   Miss Branch BrPart  Cover
----------------------------------------------------------
weko_theme/__init__.py       4      0      0      0   100%
weko_theme/bundles.py       13      0      0      0   100%
weko_theme/config.py        30      0      0      0   100%
weko_theme/ext.py           24      0      8      0   100%
weko_theme/utils.py        183     64     54     11    58%
weko_theme/version.py        2      0      0      0   100%
weko_theme/views.py         60      0      6      1    98%
----------------------------------------------------------
TOTAL                      316     64     68     12    74%
Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml

=============== 8 passed, 29 warnings, 4 error in 84.44 seconds ================
ERROR: InvocationError for command /code/modules/weko-theme/.tox/c1/bin/pytest --cov=weko_theme tests -v --cov-branch --cov-report=term --cov-report=xml --cov-report=html --basetemp=/code/modules/weko-theme/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
